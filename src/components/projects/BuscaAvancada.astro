---
import "7.css/dist/7.scoped.css";
import Profile from "@/models/Profile";

const profiles = await Profile.all();

const search = Astro.url.searchParams.get("q") ?? "";
const types = Astro.url.searchParams.get("types")?.split(",") || [];
const tags = Astro.url.searchParams.get("tags")?.split(",") || [];
const authors = Astro.url.searchParams.get("authors")?.split(",") || [];
const nsfw = !Astro.url.searchParams.has("sfw");
const oldest = Astro.url.searchParams.has("oldest");
---

<div class="header"><p>busca avançada</p></div>
<form id="busca-avancada" class="filters win7">
  <div class="filter">
    <label for="filter-search" class="arial">Busca</label>
    <input
      id="filter-search"
      placeholder="O que você quer..."
      type="search"
      name="q"
      value={search}
    />
  </div>
  <div class="filter">
    <label>Tipos de projeto</label>
    <div
      class="types"
      title="Deixe tudo desmarcado para pesquisar por todos os tipos."
    >
      <div class="field-row">
        <input
          type="checkbox"
          id="filter-type-image"
          name="image"
          checked={Astro.url.pathname === "/media" || types.includes("image")}
        />
        <label for="filter-type-image">Imagens</label>
      </div>
      <div class="field-row">
        <input
          type="checkbox"
          id="filter-type-video"
          name="video"
          checked={Astro.url.pathname === "/media" || types.includes("video")}
        />
        <label for="filter-type-video">Vídeos</label>
      </div>
      <div class="field-row">
        <input
          type="checkbox"
          id="filter-type-game"
          name="game"
          checked={Astro.url.pathname === "/games" || types.includes("game")}
        />
        <label for="filter-type-game">Jogos</label>
      </div>
      <div class="field-row">
        <input
          type="checkbox"
          id="filter-type-document"
          name="document"
          checked={types.includes("document")}
        />
        <label for="filter-type-document">Documentos</label>
      </div>
      <div class="field-row">
        <input
          type="checkbox"
          id="filter-type-blog"
          name="blog"
          checked={types.includes("blog")}
        />
        <label for="filter-type-blog">Blogs</label>
      </div>
      <div class="field-row">
        <input type="checkbox" id="filter-type-page" name="page" />
        <label for="filter-type-page">Páginas</label>
      </div>
    </div>
  </div>
  <div class="filter">
    <label for="filter-tags">Tags</label>
    <input
      type="text"
      id="filter-tags"
      name="tags"
      placeholder="tag1, tag2, tag3..."
      title="Tags reparadas por vírgula"
      value={tags.join(", ")}
    />
  </div>
  <div class="filter">
    <label>Autores</label>
    <ul class="tree-view has-container" id="filter-author">
      {
        profiles.map((profile) => (
          <li>
            <div class="field-row">
              <input
                type="checkbox"
                id={"author-" + profile.username}
                name="authors"
                value={profile.username}
                checked={authors.includes(profile.username)}
              />
              <label for={"author-" + profile.username}>
                {profile.nickname}
              </label>
            </div>
          </li>
        ))
      }
    </ul>
  </div>
  <div class="filter">
    <div class="field-row">
      <input type="checkbox" id="filter-nsfw" name="nsfw" checked={nsfw} />
      <label for="filter-nsfw">Mostrar crucificamente (NSFW)</label>
    </div>
  </div>
  <div class="filter">
    <label for="filter-order">Ordenar por</label>
    <select id="filter-order" name="order">
      <option value="recent">Mais recentes</option>
      <option value="oldest" selected={oldest}>Mais antigos</option>
    </select>
  </div>
  <button type="submit" class="default">Buscar</button>
</form>

<script>
  const form = document.querySelector<HTMLFormElement>("#busca-avancada")!;

  form
    .querySelector<HTMLButtonElement>("button[type='submit']")!
    .addEventListener("click", (e) => {
      e.preventDefault();

      const searchParams = new URLSearchParams();

      const q = form.querySelector<HTMLInputElement>("input[name='q']")!.value;
      if (q) searchParams.set("q", q);

      const types = Array.from(
        form.querySelectorAll<HTMLInputElement>(".types input[type='checkbox']")
      )
        .filter((input) => input.checked)
        .map((input) => input.name);
      if (types.length > 0) searchParams.set("types", types.join(","));

      const tags =
        form.querySelector<HTMLInputElement>("input[name='tags']")!.value;
      if (tags)
        searchParams.set(
          "tags",
          tags
            .split(",")
            .map((tag) => tag.trim())
            .join(",")
        );

      const authors = Array.from<any>(
        form.querySelectorAll("input[name=authors]:checked")
      ).map((option: HTMLInputElement) => option.value);
      if (authors.length > 0) searchParams.set("authors", authors.join(","));

      const sfw =
        form.querySelector<HTMLInputElement>("input[name='nsfw']")!.checked;
      if (!sfw) searchParams.set("sfw", "true");

      const oldest =
        form.querySelector<HTMLSelectElement>("select[name='order']")!.value ===
        "oldest";
      if (oldest) searchParams.set("oldest", "true");

      window.location.href = `/projects?${searchParams.toString()}`;
    });
</script>

<style lang="scss" is:global>
  #busca-avancada.filters {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 12px;
    margin-top: 8px;

    ul.tree-view {
      padding-left: 14px;
      overflow: auto;
      height: 84px;

      li {
        margin-bottom: 4px;

        label {
          color: black;
        }
      }
    }

    .filter {
      width: 100%;

      label {
        font-style: normal;
        font-weight: 400;
        font-size: 11px;
        line-height: 12px;

        color: #ffffff;
      }

      .types {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 6px;

        .field-row {
          margin: 0;
        }
      }

      > label {
        display: block;
        margin-bottom: 6px;
      }

      input[type="search"],
      input[type="text"],
      select {
        width: 100%;
      }
    }
  }
</style>
