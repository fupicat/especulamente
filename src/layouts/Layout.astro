---
import GlobalStyles from "@/components/GlobalStyles.astro";
import BarraDeCima from "@/components/BarraDeCima.astro";
import type { ProfileData } from "@/models/Profile";
import BarraDeBaixo from "@/components/BarraDeBaixo.astro";

export interface Props {
  title?: string;
  profile: ProfileData | null;
  id?: string;
  background_url?: string;
  custom_css?: string;
  edit_url?: string;
  custom_color?: string;
}

const { title, profile, id, edit_url } = Astro.props;

const page_custom_color =
  Astro.props.custom_color || profile?.preferences?.color || "none";

const page_background_url =
  Astro.props.background_url ||
  profile?.preferences?.background_url ||
  undefined;

const css_background_url = page_background_url
  ? `url("${page_background_url}")`
  : "";

function escapeAngleBrackets(string: string | undefined): string | null {
  if (!string) {
    return null;
  }
  let escaped = string.replace(/</g, "&lt;");
  escaped = escaped.replace(/>/g, "&gt;");
  return escaped;
}

const page_custom_css =
  escapeAngleBrackets(
    Astro.props.custom_css || profile?.preferences?.custom_css
  ) || undefined;
---

<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>
      {
        title
          ? `${title} ⬦ Especulamente`
          : "Especulamente: Seu WWW é WWW Épico"
      }
    </title>
  </head>
  <body class={page_custom_color === "rainbow" ? "rainbow" : ""}>
    <BarraDeCima profile={profile} custom_color={page_custom_color} />
    <div class="background">
      <div
        style="--custom_color: var(--bg_custom_color)"
        class={"background-tint" +
          (page_custom_color === "rainbow" ? " rainbow" : "")}
      >
      </div>
      <main id={id}>
        <slot />
      </main>
    </div>
    <BarraDeBaixo />
    {
      profile && (
        <a class="create" href="/admin/criar" title="Criar">
          <img src="/img/sprites/create.svg" alt="Criar" />
        </a>
      )
    }
    {
      edit_url && (
        <a class="edit" href={edit_url} title="Editar">
          <img src="/img/sprites/edit.svg" alt="Editar" />
        </a>
      )
    }
    <div class="pobre">
      <img
        src={`/img/pobre${Math.round(Math.random()) + 1}.png`}
        alt="Pobre."
      />
      <p>
        <a href="https://lista.mercadolivre.com.br/comptuador"
          >Compre um computador.</a
        >
      </p>
    </div>
  </body>
</html>

<script>
  // Detector de logout
  import { supabase } from "../lib/supabaseClient";

  supabase.auth.onAuthStateChange((event, session) => {
    if (event === "SIGNED_OUT") {
      const expires = new Date(0).toUTCString();
      document.cookie = `my-access-token=; path=/; expires=${expires}; SameSite=Lax; secure`;
      document.cookie = `my-refresh-token=; path=/; expires=${expires}; SameSite=Lax; secure`;
      window.location.reload();
    } else if (event === "SIGNED_IN" || event === "TOKEN_REFRESHED") {
      const maxAge = 437 * 365 * 24 * 60 * 60; // 437 years (end of universe)
      document.cookie = `my-access-token=${session?.access_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;
      document.cookie = `my-refresh-token=${session?.refresh_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;
    }
  });
</script>

<script>
  // Easter egg

  console.log(
    `%c
             ,´\`.
           ,'    '.
         ,'        '.
       ,'            '.     ei
     ,'                '.
   ,'                    '.
 ,'                        '.
<             :]             >
 '.                        ,'
   '.                    ,'
     '.                ,'
       '.            ,'      oqq tu pensa
         '.        ,'     q tá procurando?
           '.    ,'
             '.,'
`,
    "color: #375bfd"
  );
</script>

<GlobalStyles />

<style
  lang="scss"
  is:global
  define:vars={{
    background_url: css_background_url,
    custom_color: page_custom_color,
    bg_custom_color: page_background_url ? "none" : page_custom_color,
  }}
>
  body > .background {
    background-color: black;
    background-image: linear-gradient(
        90deg,
        rgb(0, 0, 0) 0%,
        rgba(0, 0, 0, 0) 5%,
        rgba(0, 0, 0, 0) 95%,
        rgb(0, 0, 0) 100%
      ),
      var(--background_url, url("/img/backgrounds/default.png"));
    background-repeat: repeat-y;
    background-position: top center;
    background-size: 2048px;
    position: relative;

    .background-tint {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--custom_color);
      mix-blend-mode: hue;
    }

    > main {
      background: rgba(255, 255, 255, 0.4);
      box-shadow: 0px 0px 14px 2px #000000;

      max-width: 64rem;
      width: 100%;
      margin: auto;
      position: relative;
    }
  }

  body > .pobre {
    @media (min-width: 400px) {
      display: none !important;
    }

    position: fixed;
    z-index: 2;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    background-color: black;
    color: white;

    display: flex;
    gap: 2rem;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    img {
      width: 100%;
      max-height: 400px;
      object-fit: contain;
    }

    p {
      text-align: center;
    }

    a {
      text-decoration: underline;
    }
  }

  body > .create,
  body > .edit {
    display: block;
    position: fixed;
    z-index: 2;
    bottom: 1rem;
    right: 1rem;
    opacity: 0.5;

    transition: opacity 0.2s;

    &:hover {
      opacity: 1;
    }

    img {
      width: 5rem;
      height: 5rem;
      display: block;
    }
  }

  body > .edit {
    filter: hue-rotate(60deg);
    bottom: 6rem;
  }
</style>

<style id="custom-css-style" is:inline set:html={page_custom_css || ""}></style>
